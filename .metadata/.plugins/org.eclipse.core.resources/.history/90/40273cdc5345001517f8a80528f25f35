package org.ThoughtWorks.story1;

import static org.junit.Assert.*;

import org.junit.Test;

public class QuantityTest {

	@Test
	public void testEquality() {

		Quantity qty = new Quantity();
		double length, length1;

		Length meter = new Meters(1.25);
		Length centimeter = new Centimeters(125);

		length = meter.convertToBase();
		length1 = centimeter.convertToBase();

		boolean value = qty.isEqual(length, length1);

		assertEquals(true, value);

	}

	@Test
	public void testNotEqual() {

		Quantity qty = new Quantity();

		double length, length1;

		Meters meter = new Meters(1.215);
		Centimeters centimeter = new Centimeters(125);

		length = meter.convertToBase();
		length1 = centimeter.convertToBase();

		boolean value = qty.isEqual(length, length1);

		assertEquals(false, value);

	}

	@Test
	public void testConverttoMeters() {

		Quantity qty = new Quantity();

		double length, length1, length2;

		Meters meter = new Meters(12.05);
		Centimeters centimeter = new Centimeters(1205);

		length = meter.meters;
		length1 = centimeter.convertToBase();

		length2 = meter.convertToMeter(length1);

		boolean value = qty.isEqual(length2, length);

		assertEquals(true, value);

	}

	@Test
	public void testConverttoCentimeters() {

		Quantity qty = new Quantity();

		double length, length1;

		Meters meter = new Meters(1.25);
		Centimeters centimeter = new Centimeters(125);

		length = meter.convertToBase();
		length1 = centimeter.convertToBase();

		// length2 = obj.convertToMeter(length1);

		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}

	@Test
	public void testConvertMetersToKms() {

		Quantity qty = new Quantity();

		double length, length1;

		Length meter = new Meters(1250);
		Length kilometer = new Kilometer(1.25);

		length = meter.convertToBase();
		length1 = kilometer.length;
		
		length = kilometer.convertToKilometer(length);
		
		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}

	
	@Test
	public void testConvertMetersToYard() {

		Quantity qty = new Quantity();

		double length, length1;

		Length meter = new Meters(91.44);
		Length yard = new Yard(100);

		length = meter.convertToBase();
		length1 = yard.convertToBase();
		
		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}

	
	@Test
	public void testConvertFootToInch() {

		Quantity qty = new Quantity();

		double length, length1;

		Length foot = new Foot(1);
		Length inch = new Inch(12);

		length = foot.convertToBase();
		length1 = inch.convertToBase();
		
		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}
	
	@Test
	public void testConvertFootToYard() {

		Quantity qty = new Quantity();

		double length, length1;

		Length foot = new Foot(3);
		Length yard = new Yard(1);

		length = foot.convertToBase();
		length1 = yard.convertToBase();
		
		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}
	
	@Test
	public void testConvertMetersToFoot() {

		Quantity qty = new Quantity();

		double length, length1;

		Length meter = new Meters(30.48);
		Length foot = new Foot(100);

		length = meter.convertToBase();
		length1 = foot.convertToBase();
		
		boolean value = qty.isEqual(length1, length);

		assertEquals(true, value);

	}
	
	
}